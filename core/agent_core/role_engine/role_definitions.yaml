import yaml
from typing import Dict, Any


class RoleManager:
    """
    Loads and manages roles from a YAML configuration.
    """

    def __init__(self):
        self.roles: Dict[str, Dict[str, Any]] = {}

    def load_from_yaml(self, yaml_content: str) -> None:
        """
        Loads roles from a YAML string.
        """
        try:
            parsed = yaml.safe_load(yaml_content)
            if 'roles' in parsed:
                self.roles = parsed['roles']
            else:
                raise ValueError("YAML must contain a top-level 'roles' key.")
        except yaml.YAMLError as e:
            print(f"[RoleManager] YAML parsing error: {e}")
            raise

    def get_roles(self) -> Dict[str, Dict[str, Any]]:
        """
        Returns the dictionary of roles.
        """
        return self.roles

    def get_role(self, role_name: str) -> Dict[str, Any]:
        """
        Returns a specific role by name.
        """
        return self.roles.get(role_name, {})
